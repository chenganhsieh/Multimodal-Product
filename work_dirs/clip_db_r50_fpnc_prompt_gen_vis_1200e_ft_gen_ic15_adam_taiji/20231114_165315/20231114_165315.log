2023/11/14 16:53:15 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.18 (default, Sep 11 2023, 13:40:15) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 508257014
    GPU 0,1,2,3,4,5: NVIDIA GeForce RTX 4090
    CUDA_HOME: /usr/local/cuda-11.3
    NVCC: Cuda compilation tools, release 11.3, V11.3.58
    GCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
    PyTorch: 1.10.2
    PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.2, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

    TorchVision: 0.11.3
    OpenCV: 4.8.1
    MMEngine: 0.9.1

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 508257014
    Distributed launcher: pytorch
    Distributed training: True
    GPU number: 1
------------------------------------------------------------

2023/11/14 16:53:15 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=16)
default_hooks = dict(
    checkpoint=dict(interval=5, max_keep_ckpts=1, type='CheckpointHook'),
    logger=dict(interval=5, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    sync_buffer=dict(type='SyncBuffersHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(
        draw_gt=False,
        draw_pred=False,
        enable=False,
        interval=1,
        show=False,
        type='VisualizationHook'))
default_scope = 'mmocr'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
icdar2015_textdet_data_root = 'data/icdar2015'
icdar2015_textdet_test = dict(
    ann_file='textdet_test.json',
    data_root='data/icdar2015',
    pipeline=[
        dict(color_type='color_ignore_orientation', type='LoadImageFromFile'),
        dict(keep_ratio=True, scale=(
            4068,
            1024,
        ), type='Resize'),
        dict(
            type='LoadOCRAnnotations',
            with_bbox=True,
            with_label=True,
            with_polygon=True),
        dict(
            meta_keys=(
                'img_path',
                'ori_shape',
                'img_shape',
                'scale_factor',
            ),
            type='PackTextDetInputs'),
    ],
    test_mode=True,
    type='OCRDataset')
icdar2015_textdet_train = dict(
    ann_file='textdet_train.json',
    data_root='data/icdar2015',
    filter_cfg=dict(filter_empty_gt=True, min_size=32),
    pipeline=[
        dict(color_type='color_ignore_orientation', type='LoadImageFromFile'),
        dict(
            type='LoadOCRAnnotations',
            with_bbox=True,
            with_label=True,
            with_polygon=True),
        dict(
            brightness=0.12549019607843137,
            op='ColorJitter',
            saturation=0.5,
            type='TorchVisionWrapper'),
        dict(
            args=[
                [
                    'Fliplr',
                    0.5,
                ],
                dict(cls='Affine', rotate=[
                    -10,
                    10,
                ]),
                [
                    'Resize',
                    [
                        0.5,
                        3.0,
                    ],
                ],
            ],
            type='ImgAugWrapper'),
        dict(min_side_ratio=0.1, type='RandomCrop'),
        dict(keep_ratio=True, scale=(
            640,
            640,
        ), type='Resize'),
        dict(size=(
            640,
            640,
        ), type='Pad'),
        dict(
            meta_keys=(
                'img_path',
                'ori_shape',
                'img_shape',
            ),
            type='PackTextDetInputs'),
    ],
    type='OCRDataset')
launcher = 'pytorch'
load_from = None
log_level = 'INFO'
log_processor = dict(by_epoch=True, type='LogProcessor', window_size=10)
model = dict(
    backbone=dict(
        input_resolution=640,
        layers=[
            3,
            4,
            6,
            3,
        ],
        output_dim=1024,
        style='pytorch',
        type='CLIPResNetWithAttention'),
    class_names=[
        'the pixels of many arbitrary-shape text instances.',
    ],
    context_decoder=dict(
        dropout=0.1,
        outdim=1024,
        style='pytorch',
        transformer_heads=4,
        transformer_layers=3,
        transformer_width=256,
        type='ContextDecoder',
        visual_dim=1024),
    context_length=14,
    det_head=dict(
        in_channels=256,
        module_loss=dict(type='DBModuleLoss'),
        postprocessor=dict(text_repr_type='quad', type='DBPostprocessor'),
        type='DBHead'),
    identity_head=dict(
        bbce_loss=True,
        downsample_ratio=32.0,
        loss_weight=1.0,
        negative_ratio=3.0,
        reduction='mean',
        type='IdentityHead'),
    neck=dict(
        in_channels=[
            256,
            512,
            1024,
            2049,
        ],
        lateral_channels=256,
        type='FPNC'),
    pretrained='pretrained/RN50.pt',
    prompt_generator=dict(
        style='pytorch',
        token_embed_dim=512,
        type='PromptGenerator',
        visual_dim=1024),
    test_cfg=None,
    text_encoder=dict(
        context_length=18,
        embed_dim=1024,
        style='pytorch',
        transformer_heads=8,
        transformer_layers=12,
        transformer_width=512,
        type='CLIPTextContextEncoder'),
    train_cfg=None,
    type='CLIPProduct',
    use_learnable_prompt=True,
    use_learnable_prompt_only=False,
    visual_prompt_generator=dict(
        dropout=0.1,
        outdim=1024,
        style='pytorch',
        transformer_heads=4,
        transformer_layers=3,
        transformer_width=256,
        type='ContextDecoder',
        visual_dim=1024))
optim_wrapper = dict(
    optimizer=dict(lr=0.007, momentum=0.9, type='SGD', weight_decay=0.0001),
    type='OptimWrapper')
param_scheduler = [
    dict(begin=100, end=1200, eta_min=1e-07, power=0.9, type='PolyLR'),
]
prompt_class_names = [
    'the pixels of many arbitrary-shape text instances.',
]
randomness = dict(seed=None)
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='textdet_test.json',
        data_root='data/icdar2015',
        pipeline=[
            dict(
                color_type='color_ignore_orientation',
                type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                4068,
                1024,
            ), type='Resize'),
            dict(
                type='LoadOCRAnnotations',
                with_bbox=True,
                with_label=True,
                with_polygon=True),
            dict(
                meta_keys=(
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackTextDetInputs'),
        ],
        test_mode=True,
        type='OCRDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(type='HmeanIOUMetric')
test_pipeline = [
    dict(color_type='color_ignore_orientation', type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        4068,
        1024,
    ), type='Resize'),
    dict(
        type='LoadOCRAnnotations',
        with_bbox=True,
        with_label=True,
        with_polygon=True),
    dict(
        meta_keys=(
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
        ),
        type='PackTextDetInputs'),
]
train_cfg = dict(max_epochs=1200, type='EpochBasedTrainLoop', val_interval=10)
train_dataloader = dict(
    batch_size=16,
    dataset=dict(
        ann_file='textdet_train.json',
        data_root='data/icdar2015',
        filter_cfg=dict(filter_empty_gt=True, min_size=32),
        pipeline=[
            dict(
                color_type='color_ignore_orientation',
                type='LoadImageFromFile'),
            dict(
                type='LoadOCRAnnotations',
                with_bbox=True,
                with_label=True,
                with_polygon=True),
            dict(
                brightness=0.12549019607843137,
                op='ColorJitter',
                saturation=0.5,
                type='TorchVisionWrapper'),
            dict(
                args=[
                    [
                        'Fliplr',
                        0.5,
                    ],
                    dict(cls='Affine', rotate=[
                        -10,
                        10,
                    ]),
                    [
                        'Resize',
                        [
                            0.5,
                            3.0,
                        ],
                    ],
                ],
                type='ImgAugWrapper'),
            dict(min_side_ratio=0.1, type='RandomCrop'),
            dict(keep_ratio=True, scale=(
                640,
                640,
            ), type='Resize'),
            dict(size=(
                640,
                640,
            ), type='Pad'),
            dict(
                meta_keys=(
                    'img_path',
                    'ori_shape',
                    'img_shape',
                ),
                type='PackTextDetInputs'),
        ],
        type='OCRDataset'),
    num_workers=24,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(color_type='color_ignore_orientation', type='LoadImageFromFile'),
    dict(
        type='LoadOCRAnnotations',
        with_bbox=True,
        with_label=True,
        with_polygon=True),
    dict(
        brightness=0.12549019607843137,
        op='ColorJitter',
        saturation=0.5,
        type='TorchVisionWrapper'),
    dict(
        args=[
            [
                'Fliplr',
                0.5,
            ],
            dict(cls='Affine', rotate=[
                -10,
                10,
            ]),
            [
                'Resize',
                [
                    0.5,
                    3.0,
                ],
            ],
        ],
        type='ImgAugWrapper'),
    dict(min_side_ratio=0.1, type='RandomCrop'),
    dict(keep_ratio=True, scale=(
        640,
        640,
    ), type='Resize'),
    dict(size=(
        640,
        640,
    ), type='Pad'),
    dict(
        meta_keys=(
            'img_path',
            'ori_shape',
            'img_shape',
        ),
        type='PackTextDetInputs'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='textdet_test.json',
        data_root='data/icdar2015',
        pipeline=[
            dict(
                color_type='color_ignore_orientation',
                type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                4068,
                1024,
            ), type='Resize'),
            dict(
                type='LoadOCRAnnotations',
                with_bbox=True,
                with_label=True,
                with_polygon=True),
            dict(
                meta_keys=(
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackTextDetInputs'),
        ],
        test_mode=True,
        type='OCRDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(type='HmeanIOUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='TextDetLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = './work_dirs/clip_db_r50_fpnc_prompt_gen_vis_1200e_ft_gen_ic15_adam_taiji'

2023/11/14 16:53:18 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SyncBuffersHook                    
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SyncBuffersHook                    
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) VisualizationHook                  
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) VisualizationHook                  
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2023/11/14 16:53:19 - mmengine - INFO - Resize the pos_embed shape from torch.Size([50, 2048]) to torch.Size([401, 2048])
2023/11/14 16:53:19 - mmengine - INFO - [] [] are misaligned params in CLIPResNetWithAttention
2023/11/14 16:53:19 - mmengine - INFO - positional_embedding is tuncated from 77 to 18
2023/11/14 16:53:19 - mmengine - INFO - [] [] are misaligned params in text encoder
Name of parameter - Initialization information

contexts - torch.Size([1, 4, 512]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

gamma - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

vis_gamma - torch.Size([]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

backbone.conv1.weight - torch.Size([32, 3, 3, 3]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.bn1.weight - torch.Size([32]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.bn1.bias - torch.Size([32]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.conv2.weight - torch.Size([32, 32, 3, 3]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.bn2.weight - torch.Size([32]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.bn2.bias - torch.Size([32]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.conv3.weight - torch.Size([64, 32, 3, 3]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.bn3.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.bn3.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.0.bn1.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.0.bn1.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.0.bn2.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.0.bn2.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.0.conv3.weight - torch.Size([256, 64, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.0.bn3.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.0.bn3.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.0.downsample.1.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.0.downsample.1.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.1.conv1.weight - torch.Size([64, 256, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.1.bn1.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.1.bn1.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.1.bn2.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.1.bn2.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.1.conv3.weight - torch.Size([256, 64, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.1.bn3.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.1.bn3.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.2.conv1.weight - torch.Size([64, 256, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.2.bn1.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.2.bn1.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.2.bn2.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.2.bn2.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.2.conv3.weight - torch.Size([256, 64, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.2.bn3.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.2.bn3.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.0.conv1.weight - torch.Size([128, 256, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.0.bn1.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.0.bn1.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.0.bn2.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.0.bn2.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.0.conv3.weight - torch.Size([512, 128, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.0.bn3.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.0.bn3.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.0.downsample.1.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.0.downsample.1.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.1.conv1.weight - torch.Size([128, 512, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.1.bn1.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.1.bn1.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.1.bn2.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.1.bn2.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.1.conv3.weight - torch.Size([512, 128, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.1.bn3.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.1.bn3.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.2.conv1.weight - torch.Size([128, 512, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.2.bn1.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.2.bn1.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.2.bn2.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.2.bn2.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.2.conv3.weight - torch.Size([512, 128, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.2.bn3.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.2.bn3.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.3.conv1.weight - torch.Size([128, 512, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.3.bn1.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.3.bn1.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.3.bn2.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.3.bn2.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.3.conv3.weight - torch.Size([512, 128, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.3.bn3.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.3.bn3.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.0.conv1.weight - torch.Size([256, 512, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.0.bn1.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.0.bn1.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.0.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.0.bn2.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.0.conv3.weight - torch.Size([1024, 256, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.0.bn3.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.0.bn3.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.0.downsample.0.weight - torch.Size([1024, 512, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.0.downsample.1.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.0.downsample.1.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.1.conv1.weight - torch.Size([256, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.1.bn1.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.1.bn1.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.1.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.1.bn2.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.1.conv3.weight - torch.Size([1024, 256, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.1.bn3.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.1.bn3.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.2.conv1.weight - torch.Size([256, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.2.bn1.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.2.bn1.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.2.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.2.bn2.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.2.conv3.weight - torch.Size([1024, 256, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.2.bn3.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.2.bn3.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.3.conv1.weight - torch.Size([256, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.3.bn1.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.3.bn1.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.3.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.3.bn2.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.3.conv3.weight - torch.Size([1024, 256, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.3.bn3.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.3.bn3.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.4.conv1.weight - torch.Size([256, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.4.bn1.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.4.bn1.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.4.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.4.bn2.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.4.conv3.weight - torch.Size([1024, 256, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.4.bn3.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.4.bn3.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.5.conv1.weight - torch.Size([256, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.5.bn1.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.5.bn1.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.5.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.5.bn2.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.5.conv3.weight - torch.Size([1024, 256, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.5.bn3.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.5.bn3.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.0.conv1.weight - torch.Size([512, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.0.bn1.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.0.bn1.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.0.bn2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.0.bn2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.0.conv3.weight - torch.Size([2048, 512, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.0.bn3.weight - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.0.bn3.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.0.downsample.0.weight - torch.Size([2048, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.0.downsample.1.weight - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.0.downsample.1.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.1.conv1.weight - torch.Size([512, 2048, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.1.bn1.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.1.bn1.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.1.bn2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.1.bn2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.1.conv3.weight - torch.Size([2048, 512, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.1.bn3.weight - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.1.bn3.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.2.conv1.weight - torch.Size([512, 2048, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.2.bn1.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.2.bn1.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.2.bn2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.2.bn2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.2.conv3.weight - torch.Size([2048, 512, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.2.bn3.weight - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.2.bn3.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.attnpool.positional_embedding - torch.Size([401, 2048]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.attnpool.k_proj.weight - torch.Size([2048, 2048]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.attnpool.k_proj.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.attnpool.q_proj.weight - torch.Size([2048, 2048]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.attnpool.q_proj.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.attnpool.v_proj.weight - torch.Size([2048, 2048]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.attnpool.v_proj.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.attnpool.c_proj.weight - torch.Size([1024, 2048]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.attnpool.c_proj.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

text_encoder.positional_embedding - torch.Size([18, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.text_projection - torch.Size([512, 1024]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.0.attn.in_proj_weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.0.attn.in_proj_bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.0.attn.out_proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.0.attn.out_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.0.ln_1.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.0.ln_1.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.0.mlp.c_fc.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.0.mlp.c_fc.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.0.mlp.c_proj.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.0.mlp.c_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.0.ln_2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.0.ln_2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.1.attn.in_proj_weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.1.attn.in_proj_bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.1.attn.out_proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.1.attn.out_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.1.ln_1.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.1.ln_1.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.1.mlp.c_fc.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.1.mlp.c_fc.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.1.mlp.c_proj.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.1.mlp.c_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.1.ln_2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.1.ln_2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.2.attn.in_proj_weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.2.attn.in_proj_bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.2.attn.out_proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.2.attn.out_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.2.ln_1.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.2.ln_1.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.2.mlp.c_fc.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.2.mlp.c_fc.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.2.mlp.c_proj.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.2.mlp.c_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.2.ln_2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.2.ln_2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.3.attn.in_proj_weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.3.attn.in_proj_bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.3.attn.out_proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.3.attn.out_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.3.ln_1.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.3.ln_1.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.3.mlp.c_fc.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.3.mlp.c_fc.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.3.mlp.c_proj.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.3.mlp.c_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.3.ln_2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.3.ln_2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.4.attn.in_proj_weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.4.attn.in_proj_bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.4.attn.out_proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.4.attn.out_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.4.ln_1.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.4.ln_1.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.4.mlp.c_fc.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.4.mlp.c_fc.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.4.mlp.c_proj.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.4.mlp.c_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.4.ln_2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.4.ln_2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.5.attn.in_proj_weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.5.attn.in_proj_bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.5.attn.out_proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.5.attn.out_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.5.ln_1.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.5.ln_1.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.5.mlp.c_fc.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.5.mlp.c_fc.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.5.mlp.c_proj.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.5.mlp.c_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.5.ln_2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.5.ln_2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.6.attn.in_proj_weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.6.attn.in_proj_bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.6.attn.out_proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.6.attn.out_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.6.ln_1.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.6.ln_1.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.6.mlp.c_fc.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.6.mlp.c_fc.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.6.mlp.c_proj.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.6.mlp.c_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.6.ln_2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.6.ln_2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.7.attn.in_proj_weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.7.attn.in_proj_bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.7.attn.out_proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.7.attn.out_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.7.ln_1.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.7.ln_1.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.7.mlp.c_fc.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.7.mlp.c_fc.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.7.mlp.c_proj.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.7.mlp.c_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.7.ln_2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.7.ln_2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.8.attn.in_proj_weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.8.attn.in_proj_bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.8.attn.out_proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.8.attn.out_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.8.ln_1.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.8.ln_1.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.8.mlp.c_fc.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.8.mlp.c_fc.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.8.mlp.c_proj.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.8.mlp.c_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.8.ln_2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.8.ln_2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.9.attn.in_proj_weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.9.attn.in_proj_bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.9.attn.out_proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.9.attn.out_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.9.ln_1.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.9.ln_1.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.9.mlp.c_fc.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.9.mlp.c_fc.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.9.mlp.c_proj.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.9.mlp.c_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.9.ln_2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.9.ln_2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.10.attn.in_proj_weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.10.attn.in_proj_bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.10.attn.out_proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.10.attn.out_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.10.ln_1.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.10.ln_1.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.10.mlp.c_fc.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.10.mlp.c_fc.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.10.mlp.c_proj.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.10.mlp.c_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.10.ln_2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.10.ln_2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.11.attn.in_proj_weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.11.attn.in_proj_bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.11.attn.out_proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.11.attn.out_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.11.ln_1.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.11.ln_1.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.11.mlp.c_fc.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.11.mlp.c_fc.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.11.mlp.c_proj.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.11.mlp.c_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.11.ln_2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.11.ln_2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.token_embedding.weight - torch.Size([49408, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.ln_final.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.ln_final.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

context_decoder.memory_proj.0.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.memory_proj.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.memory_proj.1.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.memory_proj.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.memory_proj.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.memory_proj.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.text_proj.0.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.text_proj.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.text_proj.1.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.text_proj.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.0.self_attn.q_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.0.self_attn.k_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.0.self_attn.v_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.0.self_attn.proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.0.self_attn.proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.0.cross_attn.q_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.0.cross_attn.k_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.0.cross_attn.v_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.0.cross_attn.proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.0.cross_attn.proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.0.norm1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.0.norm1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.0.norm2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.0.norm2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.0.norm3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.0.norm3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.0.mlp.0.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.0.mlp.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.0.mlp.3.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.0.mlp.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.1.self_attn.q_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.1.self_attn.k_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.1.self_attn.v_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.1.self_attn.proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.1.self_attn.proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.1.cross_attn.q_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.1.cross_attn.k_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.1.cross_attn.v_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.1.cross_attn.proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.1.cross_attn.proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.1.norm1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.1.norm1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.1.norm2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.1.norm2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.1.norm3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.1.norm3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.1.mlp.0.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.1.mlp.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.1.mlp.3.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.1.mlp.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.2.self_attn.q_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.2.self_attn.k_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.2.self_attn.v_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.2.self_attn.proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.2.self_attn.proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.2.cross_attn.q_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.2.cross_attn.k_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.2.cross_attn.v_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.2.cross_attn.proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.2.cross_attn.proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.2.norm1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.2.norm1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.2.norm2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.2.norm2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.2.norm3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.2.norm3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.2.mlp.0.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.2.mlp.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.2.mlp.3.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.decoder.2.mlp.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.out_proj.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.out_proj.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.out_proj.1.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

context_decoder.out_proj.1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

prompt_generator.prompt_proj.0.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

prompt_generator.prompt_proj.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

prompt_generator.prompt_proj.1.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

prompt_generator.prompt_proj.1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

prompt_generator.prompt_proj.3.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

prompt_generator.prompt_proj.3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

prompt_generator.prompt_proj.4.weight - torch.Size([512, 1024]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

prompt_generator.prompt_proj.4.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.memory_proj.0.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.memory_proj.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.memory_proj.1.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.memory_proj.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.memory_proj.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.memory_proj.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.text_proj.0.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.text_proj.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.text_proj.1.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.text_proj.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.0.self_attn.q_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.0.self_attn.k_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.0.self_attn.v_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.0.self_attn.proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.0.self_attn.proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.0.cross_attn.q_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.0.cross_attn.k_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.0.cross_attn.v_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.0.cross_attn.proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.0.cross_attn.proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.0.norm1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.0.norm1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.0.norm2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.0.norm2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.0.norm3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.0.norm3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.0.mlp.0.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.0.mlp.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.0.mlp.3.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.0.mlp.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.1.self_attn.q_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.1.self_attn.k_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.1.self_attn.v_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.1.self_attn.proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.1.self_attn.proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.1.cross_attn.q_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.1.cross_attn.k_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.1.cross_attn.v_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.1.cross_attn.proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.1.cross_attn.proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.1.norm1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.1.norm1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.1.norm2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.1.norm2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.1.norm3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.1.norm3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.1.mlp.0.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.1.mlp.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.1.mlp.3.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.1.mlp.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.2.self_attn.q_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.2.self_attn.k_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.2.self_attn.v_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.2.self_attn.proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.2.self_attn.proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.2.cross_attn.q_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.2.cross_attn.k_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.2.cross_attn.v_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.2.cross_attn.proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.2.cross_attn.proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.2.norm1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.2.norm1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.2.norm2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.2.norm2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.2.norm3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.2.norm3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.2.mlp.0.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.2.mlp.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.2.mlp.3.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.decoder.2.mlp.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.out_proj.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.out_proj.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.out_proj.1.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

visual_prompt_generator.out_proj.1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

neck.lateral_convs.0.conv.weight - torch.Size([256, 256, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.lateral_convs.1.conv.weight - torch.Size([256, 512, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.lateral_convs.2.conv.weight - torch.Size([256, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.lateral_convs.3.conv.weight - torch.Size([256, 2049, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.smooth_convs.0.conv.weight - torch.Size([64, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.smooth_convs.1.conv.weight - torch.Size([64, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.smooth_convs.2.conv.weight - torch.Size([64, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.smooth_convs.3.conv.weight - torch.Size([64, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

det_head.binarize.0.weight - torch.Size([64, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

det_head.binarize.1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

det_head.binarize.1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

det_head.binarize.3.weight - torch.Size([64, 64, 2, 2]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

det_head.binarize.3.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

det_head.binarize.4.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

det_head.binarize.4.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

det_head.binarize.6.weight - torch.Size([64, 1, 2, 2]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

det_head.binarize.6.bias - torch.Size([1]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

det_head.threshold.0.weight - torch.Size([64, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

det_head.threshold.1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

det_head.threshold.1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

det_head.threshold.3.weight - torch.Size([64, 64, 2, 2]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

det_head.threshold.3.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

det_head.threshold.4.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

det_head.threshold.4.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

det_head.threshold.6.weight - torch.Size([64, 1, 2, 2]): 
The value is the same before and after calling `init_weights` of CLIPProduct  

det_head.threshold.6.bias - torch.Size([1]): 
The value is the same before and after calling `init_weights` of CLIPProduct  
2023/11/14 16:53:19 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2023/11/14 16:53:19 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2023/11/14 16:53:19 - mmengine - INFO - Checkpoints will be saved to /home/biometrics/reserve/MultimodalProduct/work_dirs/clip_db_r50_fpnc_prompt_gen_vis_1200e_ft_gen_ic15_adam_taiji.
