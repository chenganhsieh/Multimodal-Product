2023-10-23 10:46:53,566 - mmocr - INFO - Log file is ./config_1023_104652/20231023_104653.log
2023-10-23 10:46:53,608 - mmocr - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.18 (default, Sep 11 2023, 13:40:15) [GCC 11.2.0]
CUDA available: True
GPU 0,1,2,3,4,5: NVIDIA GeForce RTX 4090
CUDA_HOME: /usr/local/cuda-11.3
NVCC: Build cuda_11.3.r11.3/compiler.29745058_0
GCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
PyTorch: 1.10.2
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.2, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.11.3
OpenCV: 4.8.1
MMCV: 1.3.17
MMCV Compiler: GCC 7.5
MMCV CUDA Compiler: 11.3
MMOCR: 0.4.0+0386831
------------------------------------------------------------

2023-10-23 10:46:55,012 - mmocr - INFO - Distributed training: True
2023-10-23 10:46:56,296 - mmocr - INFO - Config:
log_config = dict(interval=10, hooks=[dict(type='DetailTextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
find_unused_parameters = True
runner = dict(type='EpochBasedRunner', max_epochs=1200)
checkpoint_config = dict(by_epoch=True, interval=300)
evaluation = dict(
    interval=5,
    metric='hmean-iou',
    save_best='0_icdar2015_test_hmean-iou:hmean',
    rule='greater')
custom_imports = dict(
    imports=['ocrclip', 'datasets', 'hooks', 'optimizer'],
    allow_failed_imports=False)
opencv_num_threads = 0
mp_start_method = 'fork'
prompt_class_names = ['the pixels of many arbitrary-shape text instances.']
model = dict(
    type='OCRCLIP',
    pretrained='./pretrained/RN50.pt',
    context_length=14,
    class_names=['the pixels of many arbitrary-shape text instances.'],
    use_learnable_prompt=True,
    use_learnable_prompt_only=False,
    backbone=dict(
        type='CLIPResNetWithAttention',
        layers=[3, 4, 6, 3],
        output_dim=1024,
        input_resolution=640,
        style='pytorch'),
    text_encoder=dict(
        type='CLIPTextContextEncoder',
        context_length=18,
        embed_dim=1024,
        transformer_width=512,
        transformer_heads=8,
        transformer_layers=12,
        style='pytorch'),
    prompt_generator=dict(
        type='PromptGenerator',
        visual_dim=1024,
        token_embed_dim=512,
        style='pytorch'),
    context_decoder=dict(
        type='ContextDecoder',
        transformer_width=256,
        transformer_heads=4,
        transformer_layers=3,
        visual_dim=1024,
        dropout=0.1,
        outdim=1024,
        style='pytorch'),
    visual_prompt_generator=dict(
        type='ContextDecoder',
        transformer_width=256,
        transformer_heads=4,
        transformer_layers=3,
        visual_dim=1024,
        dropout=0.1,
        outdim=1024,
        style='pytorch'),
    neck=dict(
        type='FPNC', in_channels=[256, 512, 1024, 2049], lateral_channels=256),
    bbox_head=dict(
        type='DBHead',
        in_channels=256,
        loss=dict(type='DBLoss', alpha=5.0, beta=10.0, bbce_loss=True),
        postprocessor=dict(
            type='DBParamPostprocessor',
            text_repr_type='quad',
            mask_thr=0.28,
            min_text_score=0.2,
            min_text_width=2,
            use_approxPolyDP=True,
            unclip_ratio=1.6,
            arcLength_ratio=0.001,
            max_candidates=3000)),
    identity_head=dict(
        type='IdentityHead',
        downsample_ratio=32.0,
        loss_weight=1.0,
        reduction='mean',
        negative_ratio=3.0,
        bbce_loss=True),
    train_cfg=None,
    test_cfg=None,
    scale_matching_score_map=False)
dataset_type = 'OCRCLIPDataset'
data_root = './data/icdar2015'
train = dict(
    type='OCRCLIPDataset',
    ann_file='./data/icdar2015/instances_training.json',
    img_prefix='./data/icdar2015/imgs',
    data_name='icdar2015',
    pipeline=None)
test = dict(
    type='OCRCLIPDataset',
    ann_file='./data/icdar2015/instances_test.json',
    img_prefix='./data/icdar2015/imgs',
    data_name='icdar2015_test',
    pipeline=None)
train_list = [
    dict(
        type='OCRCLIPDataset',
        ann_file='./data/icdar2015/instances_training.json',
        img_prefix='./data/icdar2015/imgs',
        data_name='icdar2015',
        pipeline=None)
]
test_list = [
    dict(
        type='OCRCLIPDataset',
        ann_file='./data/icdar2015/instances_test.json',
        img_prefix='./data/icdar2015/imgs',
        data_name='icdar2015_test',
        pipeline=None)
]
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline_r18 = [
    dict(type='LoadImageFromFile', color_type='color_ignore_orientation'),
    dict(
        type='LoadTextAnnotations',
        with_bbox=True,
        with_mask=True,
        poly2mask=False),
    dict(type='ColorJitter', brightness=0.12549019607843137, saturation=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(
        type='ImgAug',
        args=[['Fliplr', 0.5], {
            'cls': 'Affine',
            'rotate': [-10, 10]
        }, ['Resize', [0.5, 3.0]]]),
    dict(type='EastRandomCrop', target_size=(640, 640)),
    dict(type='DBNetTargets', shrink_ratio=0.4),
    dict(type='Pad', size_divisor=32),
    dict(
        type='CustomFormatBundle',
        keys=['gt_shrink', 'gt_shrink_mask', 'gt_thr', 'gt_thr_mask'],
        visualize=dict(flag=False, boundary_key='gt_shrink')),
    dict(
        type='Collect',
        keys=['img', 'gt_shrink', 'gt_shrink_mask', 'gt_thr', 'gt_thr_mask'])
]
train_pipeline_r18_shrink = [
    dict(type='LoadImageFromFile', color_type='color_ignore_orientation'),
    dict(
        type='LoadTextAnnotations',
        with_bbox=True,
        with_mask=True,
        poly2mask=False),
    dict(type='ColorJitter', brightness=0.12549019607843137, saturation=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(
        type='ImgAug',
        args=[['Fliplr', 0.5], {
            'cls': 'Affine',
            'rotate': [-10, 10]
        }, ['Resize', [0.5, 3.0]]]),
    dict(type='EastRandomCrop', target_size=(640, 640)),
    dict(type='DBNetTargets', shrink_ratio=0.9),
    dict(type='Pad', size_divisor=32),
    dict(
        type='CustomFormatBundle',
        keys=['gt_shrink', 'gt_shrink_mask', 'gt_thr', 'gt_thr_mask'],
        visualize=dict(flag=False, boundary_key='gt_shrink')),
    dict(
        type='Collect',
        keys=['img', 'gt_shrink', 'gt_shrink_mask', 'gt_thr', 'gt_thr_mask'])
]
test_pipeline_1333_736 = [
    dict(type='LoadImageFromFile', color_type='color_ignore_orientation'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1333, 736),
        flip=False,
        transforms=[
            dict(type='Resize', img_scale=(2944, 736), keep_ratio=True),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
img_norm_cfg_r50dcnv2 = dict(
    mean=[122.67891434, 116.66876762, 104.00698793],
    std=[58.395, 57.12, 57.375],
    to_rgb=True)
train_pipeline_r50dcnv2 = [
    dict(type='LoadImageFromFile', color_type='color_ignore_orientation'),
    dict(
        type='LoadTextAnnotations',
        with_bbox=True,
        with_mask=True,
        poly2mask=False),
    dict(type='ColorJitter', brightness=0.12549019607843137, saturation=0.5),
    dict(
        type='Normalize',
        mean=[122.67891434, 116.66876762, 104.00698793],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(
        type='ImgAug',
        args=[['Fliplr', 0.5], {
            'cls': 'Affine',
            'rotate': [-10, 10]
        }, ['Resize', [0.5, 3.0]]]),
    dict(type='EastRandomCrop', target_size=(640, 640)),
    dict(type='DBNetTargets', shrink_ratio=0.4),
    dict(type='Pad', size_divisor=32),
    dict(
        type='CustomFormatBundle',
        keys=['gt_shrink', 'gt_shrink_mask', 'gt_thr', 'gt_thr_mask'],
        visualize=dict(flag=False, boundary_key='gt_shrink')),
    dict(
        type='Collect',
        keys=['img', 'gt_shrink', 'gt_shrink_mask', 'gt_thr', 'gt_thr_mask'])
]
train_pipeline_r50dcnv2_shrink = [
    dict(type='LoadImageFromFile', color_type='color_ignore_orientation'),
    dict(
        type='LoadTextAnnotations',
        with_bbox=True,
        with_mask=True,
        poly2mask=False),
    dict(type='ColorJitter', brightness=0.12549019607843137, saturation=0.5),
    dict(
        type='Normalize',
        mean=[122.67891434, 116.66876762, 104.00698793],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(
        type='ImgAug',
        args=[['Fliplr', 0.5], {
            'cls': 'Affine',
            'rotate': [-10, 10]
        }, ['Resize', [0.5, 3.0]]]),
    dict(type='EastRandomCrop', target_size=(640, 640)),
    dict(type='DBNetTargets', shrink_ratio=0.9),
    dict(type='Pad', size_divisor=32),
    dict(
        type='CustomFormatBundle',
        keys=['gt_shrink', 'gt_shrink_mask', 'gt_thr', 'gt_thr_mask'],
        visualize=dict(flag=False, boundary_key='gt_shrink')),
    dict(
        type='Collect',
        keys=['img', 'gt_shrink', 'gt_shrink_mask', 'gt_thr', 'gt_thr_mask'])
]
test_pipeline_4068_1024 = [
    dict(type='LoadImageFromFile', color_type='color_ignore_orientation'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(4068, 1024),
        flip=False,
        transforms=[
            dict(type='Resize', img_scale=(2944, 736), keep_ratio=True),
            dict(
                type='Normalize',
                mean=[122.67891434, 116.66876762, 104.00698793],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
test_pipeline_vis_4068_1024 = [
    dict(type='LoadImageFromFile', color_type='color_ignore_orientation'),
    dict(
        type='LoadTextAnnotations',
        with_bbox=True,
        with_mask=True,
        poly2mask=False),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(4068, 1024),
        flip=False,
        transforms=[
            dict(type='Resize', img_scale=(2944, 736), keep_ratio=True),
            dict(
                type='Normalize',
                mean=[122.67891434, 116.66876762, 104.00698793],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(
                type='CustomFormatBundle',
                call_super=False,
                keys=['ann_info'],
                visualize=dict(flag=False, boundary_key='gt_shrink')),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img', 'ann_info'])
        ])
]
test_pipeline_4068_1152 = [
    dict(type='LoadImageFromFile', color_type='color_ignore_orientation'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(4068, 1152),
        flip=False,
        transforms=[
            dict(type='Resize', img_scale=(2944, 736), keep_ratio=True),
            dict(
                type='Normalize',
                mean=[122.67891434, 116.66876762, 104.00698793],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
test_pipeline_vis_4068_1152 = [
    dict(type='LoadImageFromFile', color_type='color_ignore_orientation'),
    dict(
        type='LoadTextAnnotations',
        with_bbox=True,
        with_mask=True,
        poly2mask=False),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(4068, 1152),
        flip=False,
        transforms=[
            dict(type='Resize', img_scale=(2944, 736), keep_ratio=True),
            dict(
                type='Normalize',
                mean=[122.67891434, 116.66876762, 104.00698793],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(
                type='CustomFormatBundle',
                call_super=False,
                keys=['ann_info'],
                visualize=dict(flag=False, boundary_key='gt_shrink')),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img', 'ann_info'])
        ])
]
test_pipeline_736_736 = [
    dict(type='LoadImageFromFile', color_type='color_ignore_orientation'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(2944, 736),
        flip=False,
        transforms=[
            dict(type='Resize', img_scale=(2944, 736), keep_ratio=True),
            dict(
                type='Normalize',
                mean=[122.67891434, 116.66876762, 104.00698793],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
test_pipeline_vis_736_736 = [
    dict(type='LoadImageFromFile', color_type='color_ignore_orientation'),
    dict(
        type='LoadTextAnnotations',
        with_bbox=True,
        with_mask=True,
        poly2mask=False),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(2944, 736),
        flip=False,
        transforms=[
            dict(type='Resize', img_scale=(2944, 736), keep_ratio=True),
            dict(
                type='Normalize',
                mean=[122.67891434, 116.66876762, 104.00698793],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(
                type='CustomFormatBundle',
                call_super=False,
                keys=['ann_info'],
                visualize=dict(flag=False, boundary_key='gt_shrink')),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img', 'ann_info'])
        ])
]
test_pipeline_4068_736 = [
    dict(type='LoadImageFromFile', color_type='color_ignore_orientation'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(4068, 736),
        flip=False,
        transforms=[
            dict(type='Resize', img_scale=(2944, 736), keep_ratio=True),
            dict(
                type='Normalize',
                mean=[122.67891434, 116.66876762, 104.00698793],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
test_pipeline_vis_4068_736 = [
    dict(type='LoadImageFromFile', color_type='color_ignore_orientation'),
    dict(
        type='LoadTextAnnotations',
        with_bbox=True,
        with_mask=True,
        poly2mask=False),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(4068, 736),
        flip=False,
        transforms=[
            dict(type='Resize', img_scale=(2944, 736), keep_ratio=True),
            dict(
                type='Normalize',
                mean=[122.67891434, 116.66876762, 104.00698793],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(
                type='CustomFormatBundle',
                call_super=False,
                keys=['ann_info'],
                visualize=dict(flag=False, boundary_key='gt_shrink')),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img', 'ann_info'])
        ])
]
test_pipeline_800_800 = [
    dict(type='LoadImageFromFile', color_type='color_ignore_orientation'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(800, 800),
        flip=False,
        transforms=[
            dict(type='Resize', img_scale=(800, 800), keep_ratio=True),
            dict(
                type='Normalize',
                mean=[122.67891434, 116.66876762, 104.00698793],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
test_pipeline_vis_800_800 = [
    dict(type='LoadImageFromFile', color_type='color_ignore_orientation'),
    dict(
        type='LoadTextAnnotations',
        with_bbox=True,
        with_mask=True,
        poly2mask=False),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(800, 800),
        flip=False,
        transforms=[
            dict(type='Resize', img_scale=(800, 800), keep_ratio=True),
            dict(
                type='Normalize',
                mean=[122.67891434, 116.66876762, 104.00698793],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(
                type='CustomFormatBundle',
                call_super=False,
                keys=['ann_info'],
                visualize=dict(flag=False, boundary_key='gt_shrink')),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img', 'ann_info'])
        ])
]
test_pipeline_2944_800 = [
    dict(type='LoadImageFromFile', color_type='color_ignore_orientation'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(2944, 800),
        flip=False,
        transforms=[
            dict(type='Resize', img_scale=(2944, 800), keep_ratio=True),
            dict(
                type='Normalize',
                mean=[122.67891434, 116.66876762, 104.00698793],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
test_pipeline_4068_800 = [
    dict(type='LoadImageFromFile', color_type='color_ignore_orientation'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(4068, 800),
        flip=False,
        transforms=[
            dict(type='Resize', img_scale=(2944, 800), keep_ratio=True),
            dict(
                type='Normalize',
                mean=[122.67891434, 116.66876762, 104.00698793],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
test_pipeline_vis_2944_800 = [
    dict(type='LoadImageFromFile', color_type='color_ignore_orientation'),
    dict(
        type='LoadTextAnnotations',
        with_bbox=True,
        with_mask=True,
        poly2mask=False),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(2944, 800),
        flip=False,
        transforms=[
            dict(type='Resize', img_scale=(2944, 800), keep_ratio=True),
            dict(
                type='Normalize',
                mean=[122.67891434, 116.66876762, 104.00698793],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(
                type='CustomFormatBundle',
                call_super=False,
                keys=['ann_info'],
                visualize=dict(flag=False, boundary_key='gt_shrink')),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img', 'ann_info'])
        ])
]
test_pipeline_1600_1024 = [
    dict(type='LoadImageFromFile', color_type='color_ignore_orientation'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1600, 1024),
        flip=False,
        transforms=[
            dict(type='Resize', img_scale=(1600, 1024), keep_ratio=True),
            dict(
                type='Normalize',
                mean=[122.67891434, 116.66876762, 104.00698793],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
test_pipeline_vis_1600_1024 = [
    dict(type='LoadImageFromFile', color_type='color_ignore_orientation'),
    dict(
        type='LoadTextAnnotations',
        with_bbox=True,
        with_mask=True,
        poly2mask=False),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1600, 1024),
        flip=False,
        transforms=[
            dict(type='Resize', img_scale=(1600, 1024), keep_ratio=True),
            dict(
                type='Normalize',
                mean=[122.67891434, 116.66876762, 104.00698793],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(
                type='CustomFormatBundle',
                call_super=False,
                keys=['ann_info'],
                visualize=dict(flag=False, boundary_key='gt_shrink')),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img', 'ann_info'])
        ])
]
test_pipeline_1024_768 = [
    dict(type='LoadImageFromFile', color_type='color_ignore_orientation'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1024, 768),
        flip=False,
        transforms=[
            dict(type='Resize', img_scale=(2944, 736), keep_ratio=True),
            dict(
                type='Normalize',
                mean=[122.67891434, 116.66876762, 104.00698793],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
test_pipeline_2944_768 = [
    dict(type='LoadImageFromFile', color_type='color_ignore_orientation'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(2944, 768),
        flip=False,
        transforms=[
            dict(type='Resize', img_scale=(2944, 736), keep_ratio=True),
            dict(
                type='Normalize',
                mean=[122.67891434, 116.66876762, 104.00698793],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
test_pipeline_list = [[{
    'type': 'LoadImageFromFile',
    'color_type': 'color_ignore_orientation'
}, {
    'type':
    'MultiScaleFlipAug',
    'img_scale': (4068, 1024),
    'flip':
    False,
    'transforms': [{
        'type': 'Resize',
        'img_scale': (2944, 736),
        'keep_ratio': True
    }, {
        'type': 'Normalize',
        'mean': [122.67891434, 116.66876762, 104.00698793],
        'std': [58.395, 57.12, 57.375],
        'to_rgb': True
    }, {
        'type': 'Pad',
        'size_divisor': 32
    }, {
        'type': 'ImageToTensor',
        'keys': ['img']
    }, {
        'type': 'Collect',
        'keys': ['img']
    }]
}],
                      [{
                          'type': 'LoadImageFromFile',
                          'color_type': 'color_ignore_orientation'
                      }, {
                          'type':
                          'MultiScaleFlipAug',
                          'img_scale': (4068, 1024),
                          'flip':
                          False,
                          'transforms': [{
                              'type': 'Resize',
                              'img_scale': (2944, 736),
                              'keep_ratio': True
                          }, {
                              'type':
                              'Normalize',
                              'mean':
                              [122.67891434, 116.66876762, 104.00698793],
                              'std': [58.395, 57.12, 57.375],
                              'to_rgb':
                              True
                          }, {
                              'type': 'Pad',
                              'size_divisor': 32
                          }, {
                              'type': 'ImageToTensor',
                              'keys': ['img']
                          }, {
                              'type': 'Collect',
                              'keys': ['img']
                          }]
                      }],
                      [{
                          'type': 'LoadImageFromFile',
                          'color_type': 'color_ignore_orientation'
                      }, {
                          'type':
                          'MultiScaleFlipAug',
                          'img_scale': (800, 800),
                          'flip':
                          False,
                          'transforms': [{
                              'type': 'Resize',
                              'img_scale': (800, 800),
                              'keep_ratio': True
                          }, {
                              'type':
                              'Normalize',
                              'mean':
                              [122.67891434, 116.66876762, 104.00698793],
                              'std': [58.395, 57.12, 57.375],
                              'to_rgb':
                              True
                          }, {
                              'type': 'Pad',
                              'size_divisor': 32
                          }, {
                              'type': 'ImageToTensor',
                              'keys': ['img']
                          }, {
                              'type': 'Collect',
                              'keys': ['img']
                          }]
                      }],
                      [{
                          'type': 'LoadImageFromFile',
                          'color_type': 'color_ignore_orientation'
                      }, {
                          'type':
                          'MultiScaleFlipAug',
                          'img_scale': (4068, 736),
                          'flip':
                          False,
                          'transforms': [{
                              'type': 'Resize',
                              'img_scale': (2944, 736),
                              'keep_ratio': True
                          }, {
                              'type':
                              'Normalize',
                              'mean':
                              [122.67891434, 116.66876762, 104.00698793],
                              'std': [58.395, 57.12, 57.375],
                              'to_rgb':
                              True
                          }, {
                              'type': 'Pad',
                              'size_divisor': 32
                          }, {
                              'type': 'ImageToTensor',
                              'keys': ['img']
                          }, {
                              'type': 'Collect',
                              'keys': ['img']
                          }]
                      }]]
data = dict(
    samples_per_gpu=16,
    workers_per_gpu=8,
    val_dataloader=dict(samples_per_gpu=1),
    test_dataloader=dict(samples_per_gpu=1),
    train=dict(
        type='UniformConcatDataset',
        datasets=[
            dict(
                type='OCRCLIPDataset',
                ann_file='./data/icdar2015/instances_training.json',
                img_prefix='./data/icdar2015/imgs',
                data_name='icdar2015',
                pipeline=None)
        ],
        pipeline=[
            dict(
                type='LoadImageFromFile',
                color_type='color_ignore_orientation'),
            dict(
                type='LoadTextAnnotations',
                with_bbox=True,
                with_mask=True,
                poly2mask=False),
            dict(
                type='ColorJitter',
                brightness=0.12549019607843137,
                saturation=0.5),
            dict(
                type='Normalize',
                mean=[122.67891434, 116.66876762, 104.00698793],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(
                type='ImgAug',
                args=[['Fliplr', 0.5], {
                    'cls': 'Affine',
                    'rotate': [-10, 10]
                }, ['Resize', [0.5, 3.0]]]),
            dict(type='EastRandomCrop', target_size=(640, 640)),
            dict(type='DBNetTargets', shrink_ratio=0.4),
            dict(type='Pad', size_divisor=32),
            dict(
                type='CustomFormatBundle',
                keys=['gt_shrink', 'gt_shrink_mask', 'gt_thr', 'gt_thr_mask'],
                visualize=dict(flag=False, boundary_key='gt_shrink')),
            dict(
                type='Collect',
                keys=[
                    'img', 'gt_shrink', 'gt_shrink_mask', 'gt_thr',
                    'gt_thr_mask'
                ])
        ]),
    val=dict(
        type='UniformConcatDataset',
        datasets=[
            dict(
                type='OCRCLIPDataset',
                ann_file='./data/icdar2015/instances_test.json',
                img_prefix='./data/icdar2015/imgs',
                data_name='icdar2015_test',
                pipeline=None)
        ],
        pipeline=[
            dict(
                type='LoadImageFromFile',
                color_type='color_ignore_orientation'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(4068, 1024),
                flip=False,
                transforms=[
                    dict(
                        type='Resize', img_scale=(2944, 736), keep_ratio=True),
                    dict(
                        type='Normalize',
                        mean=[122.67891434, 116.66876762, 104.00698793],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='UniformConcatDataset',
        datasets=[
            dict(
                type='OCRCLIPDataset',
                ann_file='./data/icdar2015/instances_test.json',
                img_prefix='./data/icdar2015/imgs',
                data_name='icdar2015_test',
                pipeline=None)
        ],
        pipeline=[
            dict(
                type='LoadImageFromFile',
                color_type='color_ignore_orientation'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(4068, 1024),
                flip=False,
                transforms=[
                    dict(
                        type='Resize', img_scale=(2944, 736), keep_ratio=True),
                    dict(
                        type='Normalize',
                        mean=[122.67891434, 116.66876762, 104.00698793],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
optimizer = dict(
    type='Adam',
    lr=0.0001,
    weight_decay=0.0001,
    paramwise_cfg=dict(
        custom_keys=dict(
            backbone=dict(lr_mult=0.1),
            text_encoder=dict(lr_mult=0.0),
            norm=dict(decay_mult=0.0))))
optimizer_config = dict(grad_clip=None)
lr_config = dict(policy='poly', power=0.9, min_lr=1e-07, by_epoch=True)
total_epochs = 1200
work_dir = './config_1023_104652'
gpu_ids = range(0, 4)

2023-10-23 10:46:58,577 - mmocr - INFO - Set random seed to 898907913, deterministic: False
2023-10-23 10:46:58,688 - mmocr - INFO - Loaded icdar2015 1000 images
2023-10-23 10:46:59,517 - mmocr - INFO - Resize the pos_embed shape from torch.Size([50, 2048]) to torch.Size([401, 2048])
2023-10-23 10:46:59,538 - mmocr - INFO - [] [] are misaligned params in CLIPResNetWithAttention
2023-10-23 10:46:59,774 - mmocr - INFO - positional_embedding is tuncated from 77 to 18
2023-10-23 10:46:59,798 - mmocr - INFO - [] [] are misaligned params in text encoder
2023-10-23 10:46:59,819 - mmocr - INFO - initialize DBHead with init_cfg [{'type': 'Kaiming', 'layer': 'Conv'}, {'type': 'Constant', 'layer': 'BatchNorm', 'val': 1.0, 'bias': 0.0001}]
2023-10-23 10:46:59,820 - mmocr - INFO - initialize IdentityHead with init_cfg [{'type': 'Kaiming', 'layer': 'Conv'}, {'type': 'Constant', 'layer': 'BatchNorm', 'val': 1.0, 'bias': 0.0001}]
Name of parameter - Initialization information

contexts - torch.Size([1, 4, 512]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

gamma - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

vis_gamma - torch.Size([]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

backbone.conv1.weight - torch.Size([32, 3, 3, 3]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.bn1.weight - torch.Size([32]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.bn1.bias - torch.Size([32]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.conv2.weight - torch.Size([32, 32, 3, 3]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.bn2.weight - torch.Size([32]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.bn2.bias - torch.Size([32]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.conv3.weight - torch.Size([64, 32, 3, 3]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.bn3.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.bn3.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.0.bn1.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.0.bn1.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.0.bn2.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.0.bn2.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.0.conv3.weight - torch.Size([256, 64, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.0.bn3.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.0.bn3.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.0.downsample.1.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.0.downsample.1.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.1.conv1.weight - torch.Size([64, 256, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.1.bn1.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.1.bn1.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.1.bn2.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.1.bn2.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.1.conv3.weight - torch.Size([256, 64, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.1.bn3.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.1.bn3.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.2.conv1.weight - torch.Size([64, 256, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.2.bn1.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.2.bn1.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.2.bn2.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.2.bn2.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.2.conv3.weight - torch.Size([256, 64, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.2.bn3.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer1.2.bn3.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.0.conv1.weight - torch.Size([128, 256, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.0.bn1.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.0.bn1.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.0.bn2.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.0.bn2.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.0.conv3.weight - torch.Size([512, 128, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.0.bn3.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.0.bn3.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.0.downsample.1.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.0.downsample.1.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.1.conv1.weight - torch.Size([128, 512, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.1.bn1.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.1.bn1.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.1.bn2.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.1.bn2.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.1.conv3.weight - torch.Size([512, 128, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.1.bn3.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.1.bn3.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.2.conv1.weight - torch.Size([128, 512, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.2.bn1.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.2.bn1.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.2.bn2.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.2.bn2.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.2.conv3.weight - torch.Size([512, 128, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.2.bn3.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.2.bn3.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.3.conv1.weight - torch.Size([128, 512, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.3.bn1.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.3.bn1.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.3.bn2.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.3.bn2.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.3.conv3.weight - torch.Size([512, 128, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.3.bn3.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer2.3.bn3.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.0.conv1.weight - torch.Size([256, 512, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.0.bn1.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.0.bn1.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.0.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.0.bn2.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.0.conv3.weight - torch.Size([1024, 256, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.0.bn3.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.0.bn3.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.0.downsample.0.weight - torch.Size([1024, 512, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.0.downsample.1.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.0.downsample.1.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.1.conv1.weight - torch.Size([256, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.1.bn1.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.1.bn1.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.1.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.1.bn2.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.1.conv3.weight - torch.Size([1024, 256, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.1.bn3.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.1.bn3.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.2.conv1.weight - torch.Size([256, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.2.bn1.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.2.bn1.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.2.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.2.bn2.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.2.conv3.weight - torch.Size([1024, 256, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.2.bn3.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.2.bn3.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.3.conv1.weight - torch.Size([256, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.3.bn1.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.3.bn1.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.3.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.3.bn2.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.3.conv3.weight - torch.Size([1024, 256, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.3.bn3.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.3.bn3.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.4.conv1.weight - torch.Size([256, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.4.bn1.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.4.bn1.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.4.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.4.bn2.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.4.conv3.weight - torch.Size([1024, 256, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.4.bn3.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.4.bn3.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.5.conv1.weight - torch.Size([256, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.5.bn1.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.5.bn1.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.5.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.5.bn2.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.5.conv3.weight - torch.Size([1024, 256, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.5.bn3.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer3.5.bn3.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.0.conv1.weight - torch.Size([512, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.0.bn1.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.0.bn1.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.0.bn2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.0.bn2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.0.conv3.weight - torch.Size([2048, 512, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.0.bn3.weight - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.0.bn3.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.0.downsample.0.weight - torch.Size([2048, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.0.downsample.1.weight - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.0.downsample.1.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.1.conv1.weight - torch.Size([512, 2048, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.1.bn1.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.1.bn1.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.1.bn2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.1.bn2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.1.conv3.weight - torch.Size([2048, 512, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.1.bn3.weight - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.1.bn3.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.2.conv1.weight - torch.Size([512, 2048, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.2.bn1.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.2.bn1.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.2.bn2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.2.bn2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.2.conv3.weight - torch.Size([2048, 512, 1, 1]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.2.bn3.weight - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.layer4.2.bn3.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.attnpool.positional_embedding - torch.Size([401, 2048]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.attnpool.k_proj.weight - torch.Size([2048, 2048]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.attnpool.k_proj.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.attnpool.q_proj.weight - torch.Size([2048, 2048]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.attnpool.q_proj.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.attnpool.v_proj.weight - torch.Size([2048, 2048]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.attnpool.v_proj.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.attnpool.c_proj.weight - torch.Size([1024, 2048]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

backbone.attnpool.c_proj.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CLIPResNetWithAttention  

text_encoder.positional_embedding - torch.Size([18, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.text_projection - torch.Size([512, 1024]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.0.attn.in_proj_weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.0.attn.in_proj_bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.0.attn.out_proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.0.attn.out_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.0.ln_1.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.0.ln_1.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.0.mlp.c_fc.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.0.mlp.c_fc.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.0.mlp.c_proj.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.0.mlp.c_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.0.ln_2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.0.ln_2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.1.attn.in_proj_weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.1.attn.in_proj_bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.1.attn.out_proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.1.attn.out_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.1.ln_1.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.1.ln_1.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.1.mlp.c_fc.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.1.mlp.c_fc.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.1.mlp.c_proj.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.1.mlp.c_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.1.ln_2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.1.ln_2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.2.attn.in_proj_weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.2.attn.in_proj_bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.2.attn.out_proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.2.attn.out_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.2.ln_1.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.2.ln_1.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.2.mlp.c_fc.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.2.mlp.c_fc.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.2.mlp.c_proj.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.2.mlp.c_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.2.ln_2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.2.ln_2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.3.attn.in_proj_weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.3.attn.in_proj_bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.3.attn.out_proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.3.attn.out_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.3.ln_1.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.3.ln_1.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.3.mlp.c_fc.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.3.mlp.c_fc.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.3.mlp.c_proj.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.3.mlp.c_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.3.ln_2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.3.ln_2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.4.attn.in_proj_weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.4.attn.in_proj_bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.4.attn.out_proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.4.attn.out_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.4.ln_1.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.4.ln_1.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.4.mlp.c_fc.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.4.mlp.c_fc.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.4.mlp.c_proj.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.4.mlp.c_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.4.ln_2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.4.ln_2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.5.attn.in_proj_weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.5.attn.in_proj_bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.5.attn.out_proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.5.attn.out_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.5.ln_1.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.5.ln_1.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.5.mlp.c_fc.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.5.mlp.c_fc.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.5.mlp.c_proj.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.5.mlp.c_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.5.ln_2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.5.ln_2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.6.attn.in_proj_weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.6.attn.in_proj_bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.6.attn.out_proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.6.attn.out_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.6.ln_1.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.6.ln_1.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.6.mlp.c_fc.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.6.mlp.c_fc.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.6.mlp.c_proj.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.6.mlp.c_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.6.ln_2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.6.ln_2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.7.attn.in_proj_weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.7.attn.in_proj_bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.7.attn.out_proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.7.attn.out_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.7.ln_1.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.7.ln_1.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.7.mlp.c_fc.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.7.mlp.c_fc.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.7.mlp.c_proj.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.7.mlp.c_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.7.ln_2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.7.ln_2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.8.attn.in_proj_weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.8.attn.in_proj_bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.8.attn.out_proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.8.attn.out_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.8.ln_1.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.8.ln_1.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.8.mlp.c_fc.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.8.mlp.c_fc.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.8.mlp.c_proj.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.8.mlp.c_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.8.ln_2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.8.ln_2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.9.attn.in_proj_weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.9.attn.in_proj_bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.9.attn.out_proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.9.attn.out_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.9.ln_1.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.9.ln_1.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.9.mlp.c_fc.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.9.mlp.c_fc.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.9.mlp.c_proj.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.9.mlp.c_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.9.ln_2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.9.ln_2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.10.attn.in_proj_weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.10.attn.in_proj_bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.10.attn.out_proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.10.attn.out_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.10.ln_1.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.10.ln_1.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.10.mlp.c_fc.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.10.mlp.c_fc.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.10.mlp.c_proj.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.10.mlp.c_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.10.ln_2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.10.ln_2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.11.attn.in_proj_weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.11.attn.in_proj_bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.11.attn.out_proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.11.attn.out_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.11.ln_1.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.11.ln_1.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.11.mlp.c_fc.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.11.mlp.c_fc.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.11.mlp.c_proj.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.11.mlp.c_proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.11.ln_2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.transformer.resblocks.11.ln_2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.token_embedding.weight - torch.Size([49408, 512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.ln_final.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

text_encoder.ln_final.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CLIPTextContextEncoder  

context_decoder.memory_proj.0.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.memory_proj.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.memory_proj.1.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.memory_proj.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.memory_proj.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.memory_proj.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.text_proj.0.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.text_proj.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.text_proj.1.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.text_proj.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.0.self_attn.q_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.0.self_attn.k_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.0.self_attn.v_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.0.self_attn.proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.0.self_attn.proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.0.cross_attn.q_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.0.cross_attn.k_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.0.cross_attn.v_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.0.cross_attn.proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.0.cross_attn.proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.0.norm1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.0.norm1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.0.norm2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.0.norm2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.0.norm3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.0.norm3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.0.mlp.0.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.0.mlp.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.0.mlp.3.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.0.mlp.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.1.self_attn.q_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.1.self_attn.k_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.1.self_attn.v_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.1.self_attn.proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.1.self_attn.proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.1.cross_attn.q_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.1.cross_attn.k_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.1.cross_attn.v_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.1.cross_attn.proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.1.cross_attn.proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.1.norm1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.1.norm1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.1.norm2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.1.norm2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.1.norm3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.1.norm3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.1.mlp.0.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.1.mlp.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.1.mlp.3.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.1.mlp.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.2.self_attn.q_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.2.self_attn.k_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.2.self_attn.v_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.2.self_attn.proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.2.self_attn.proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.2.cross_attn.q_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.2.cross_attn.k_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.2.cross_attn.v_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.2.cross_attn.proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.2.cross_attn.proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.2.norm1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.2.norm1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.2.norm2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.2.norm2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.2.norm3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.2.norm3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.2.mlp.0.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.2.mlp.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.2.mlp.3.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.decoder.2.mlp.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.out_proj.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.out_proj.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.out_proj.1.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

context_decoder.out_proj.1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

prompt_generator.prompt_proj.0.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

prompt_generator.prompt_proj.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

prompt_generator.prompt_proj.1.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

prompt_generator.prompt_proj.1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

prompt_generator.prompt_proj.3.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

prompt_generator.prompt_proj.3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

prompt_generator.prompt_proj.4.weight - torch.Size([512, 1024]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

prompt_generator.prompt_proj.4.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.memory_proj.0.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.memory_proj.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.memory_proj.1.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.memory_proj.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.memory_proj.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.memory_proj.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.text_proj.0.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.text_proj.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.text_proj.1.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.text_proj.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.0.self_attn.q_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.0.self_attn.k_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.0.self_attn.v_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.0.self_attn.proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.0.self_attn.proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.0.cross_attn.q_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.0.cross_attn.k_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.0.cross_attn.v_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.0.cross_attn.proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.0.cross_attn.proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.0.norm1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.0.norm1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.0.norm2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.0.norm2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.0.norm3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.0.norm3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.0.mlp.0.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.0.mlp.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.0.mlp.3.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.0.mlp.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.1.self_attn.q_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.1.self_attn.k_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.1.self_attn.v_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.1.self_attn.proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.1.self_attn.proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.1.cross_attn.q_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.1.cross_attn.k_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.1.cross_attn.v_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.1.cross_attn.proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.1.cross_attn.proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.1.norm1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.1.norm1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.1.norm2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.1.norm2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.1.norm3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.1.norm3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.1.mlp.0.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.1.mlp.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.1.mlp.3.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.1.mlp.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.2.self_attn.q_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.2.self_attn.k_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.2.self_attn.v_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.2.self_attn.proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.2.self_attn.proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.2.cross_attn.q_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.2.cross_attn.k_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.2.cross_attn.v_proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.2.cross_attn.proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.2.cross_attn.proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.2.norm1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.2.norm1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.2.norm2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.2.norm2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.2.norm3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.2.norm3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.2.mlp.0.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.2.mlp.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.2.mlp.3.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.decoder.2.mlp.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.out_proj.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.out_proj.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.out_proj.1.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

visual_prompt_generator.out_proj.1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

neck.lateral_convs.0.conv.weight - torch.Size([256, 256, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.lateral_convs.1.conv.weight - torch.Size([256, 512, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.lateral_convs.2.conv.weight - torch.Size([256, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.lateral_convs.3.conv.weight - torch.Size([256, 2049, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.smooth_convs.0.conv.weight - torch.Size([64, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.smooth_convs.1.conv.weight - torch.Size([64, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.smooth_convs.2.conv.weight - torch.Size([64, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.smooth_convs.3.conv.weight - torch.Size([64, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

bbox_head.binarize.0.weight - torch.Size([64, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

bbox_head.binarize.1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

bbox_head.binarize.1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

bbox_head.binarize.3.weight - torch.Size([64, 64, 2, 2]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

bbox_head.binarize.3.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

bbox_head.binarize.4.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

bbox_head.binarize.4.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

bbox_head.binarize.6.weight - torch.Size([64, 1, 2, 2]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

bbox_head.binarize.6.bias - torch.Size([1]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

bbox_head.threshold.0.weight - torch.Size([64, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

bbox_head.threshold.1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

bbox_head.threshold.1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

bbox_head.threshold.3.weight - torch.Size([64, 64, 2, 2]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

bbox_head.threshold.3.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

bbox_head.threshold.4.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

bbox_head.threshold.4.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

bbox_head.threshold.6.weight - torch.Size([64, 1, 2, 2]): 
The value is the same before and after calling `init_weights` of OCRCLIP  

bbox_head.threshold.6.bias - torch.Size([1]): 
The value is the same before and after calling `init_weights` of OCRCLIP  
2023-10-23 10:46:59,823 - mmocr - INFO - #Params: 114076899
2023-10-23 10:47:00,047 - mmocr - INFO - Resize the pos_embed shape from torch.Size([50, 2048]) to torch.Size([401, 2048])
2023-10-23 10:47:00,065 - mmocr - INFO - [] [] are misaligned params in CLIPResNetWithAttention
2023-10-23 10:47:00,290 - mmocr - INFO - positional_embedding is tuncated from 77 to 18
2023-10-23 10:47:00,313 - mmocr - INFO - [] [] are misaligned params in text encoder
2023-10-23 10:47:01,922 - mmocr - INFO - Loaded icdar2015_test 500 images
2023-10-23 10:47:01,923 - mmocr - INFO - Start running, host: biometrics@thanos1, work_dir: /home/biometrics/reserve/Multimodal-Product/config_1023_104652
2023-10-23 10:47:01,923 - mmocr - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(NORMAL      ) DistEvalHook                       
(VERY_LOW    ) DetailTextLoggerHook               
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) DistEvalHook                       
(LOW         ) IterTimerHook                      
(VERY_LOW    ) DetailTextLoggerHook               
 -------------------- 
before_train_iter:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(NORMAL      ) DistEvalHook                       
(LOW         ) IterTimerHook                      
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(NORMAL      ) DistEvalHook                       
(LOW         ) IterTimerHook                      
(VERY_LOW    ) DetailTextLoggerHook               
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(NORMAL      ) DistEvalHook                       
(VERY_LOW    ) DetailTextLoggerHook               
 -------------------- 
before_val_epoch:
(NORMAL      ) DistSamplerSeedHook                
(LOW         ) IterTimerHook                      
(VERY_LOW    ) DetailTextLoggerHook               
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) DetailTextLoggerHook               
 -------------------- 
after_run:
(VERY_LOW    ) DetailTextLoggerHook               
 -------------------- 
2023-10-23 10:47:01,923 - mmocr - INFO - workflow: [('train', 1)], max: 1200 epochs
2023-10-23 10:47:01,923 - mmocr - INFO - Checkpoints will be saved to /home/biometrics/reserve/Multimodal-Product/config_1023_104652 by HardDiskBackend.
